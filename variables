Local Variables:
===============
These are variables declared inside methods, constructors, or blocks.
Local variables are stored on the stack. The stack is a region of memory that keeps track of method calls and local variables during execution. Once the method completes execution, the memory for local variables is freed.

Instance Variables:
==================
These are variables declared inside a class but outside any methods. They are unique to each instance (object) of a class.
Instance variables are stored in the heap memory, which is the area of memory where objects are stored. Each object created will have its own copy of the instance variables.
Class Variables (Static Variables):

These are variables declared with the static keyword. They belong to the class, rather than to any specific instance of the class.
Class variables are also stored in the heap memory, but they are shared by all instances of the class. This allows them to be accessed without creating an object.

Method Area:
============
In Java, the method area is part of the memory that stores class-level information like bytecode, method data, and class variables.
Class definitions and static variables are typically stored here.
Constant Pool:

The constant pool is a part of the method area where constants (such as final variables) are stored. This is where Java stores string literals, for example.


Summary:
========
Local variables are stored on the stack.
Instance variables and static variables are stored in the heap.
The method area holds class-level data and code.
